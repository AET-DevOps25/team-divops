name: Pipeline For Client Deployment

on:
  push:
    branches: [main]

env:
  KUBE_NAMESPACE: client-app
  RELEASE_NAME: team-divops-client
  HELM_CHART_PATH: ./helm/divops
  IMAGE_REPOSITORY: ghcr.io/aet-devops25/team-divops-client

jobs:
  build-and-push-client-app:
    name: Build and Push Client Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      image_tag: ${{ steps.set-tag.outputs.image_tag }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set IMAGE_TAG to short SHA
        id: set-tag
        run: echo "image_tag=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_OUTPUT

      - name: Build client Docker image with both tags
        run: docker build -f ./client/Dockerfile.prod -t ${{ env.IMAGE_REPOSITORY }}:latest -t ${{ env.IMAGE_REPOSITORY }}:${{ steps.set-tag.outputs.image_tag }} ./client

      - name: Push latest tag
        run: docker push ${{ env.IMAGE_REPOSITORY }}:latest

      - name: Push SHA tag
        run: docker push ${{ env.IMAGE_REPOSITORY }}:${{ steps.set-tag.outputs.image_tag }}
        # run: docker push ${{ env.IMAGE_REPOSITORY }}:${{ env.IMAGE_TAG }}

  deploy-helm:
    name: Deploy Helm Chart
    runs-on: ubuntu-latest
    needs: build-and-push-client-app
    env:
      IMAGE_TAG: ${{ needs.build-and-push-client-app.outputs.image_tag }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'latest'

      - name: Create .kube directory
        run: mkdir -p $HOME/.kube

      - name: Configure kubeconfig
        run: echo "${{ secrets.KUBECONFIG }}" > $HOME/.kube/config

      - name: Deploy Helm Chart with SHA tag
        run: helm upgrade --install $RELEASE_NAME $HELM_CHART_PATH --namespace $KUBE_NAMESPACE --set client.image.repository=$IMAGE_REPOSITORY --set client.image.tag=$IMAGE_TAG --wait
